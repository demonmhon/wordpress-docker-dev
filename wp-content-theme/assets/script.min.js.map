{"version":3,"file":"script.min.js","sources":["../../src/js/google-maps.js","../../src/js/index.js"],"sourcesContent":["// google-maps.js\n\n(function ($) {\n  createMaps();\n\n  function createMaps () {\n    $('.map-item').each(function () {\n      map = newMap($(this));\n    });\n  }\n\n  function newMap ($el) {\n    const $markers = $el.find('.marker');\n    // See document:\n    // https://developers.google.com/maps/documentation/javascript/styling\n    // https://mapstyle.withgoogle.com/\n    const styles = [];\n    const args = {\n      zoom: 16,\n      scrollwheel: false,\n      disableDefaultUI: false,\n      center: new google.maps.LatLng(0, 0),\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\n      styles: styles\n    };\n    const map = new google.maps.Map($el[0], args);\n\n    map.markers = [];\n    $markers.each(function () {\n      addMapMarker($(this), map);\n    });\n\n    setMapCenter(map);\n    return map;\n  }\n\n  function addMapMarker ($marker, map) {\n    const latlng = new google.maps.LatLng(\n      $marker.attr('data-lat'),\n      $marker.attr('data-lng')\n    );\n    const markerConfig = {\n      position: latlng,\n      map: map\n    };\n    if ($marker.attr('data-icon')) {\n      markerConfig.icon = $marker.attr('data-icon');\n    }\n    const marker = new google.maps.Marker(markerConfig);\n\n    map.markers.push(marker);\n    if ($marker.html()) {\n      const infowindow = new google.maps.InfoWindow({\n        content: $marker.html()\n      });\n      google.maps.event.addListener(marker, 'click', function () {\n        infowindow.open(map, marker);\n      });\n    }\n  }\n\n  function setMapCenter (map) {\n    const bounds = new google.maps.LatLngBounds();\n    $.each(map.markers, function (i, marker) {\n      const latlng = new google.maps.LatLng(\n        marker.position.lat(),\n        marker.position.lng()\n      );\n      bounds.extend(latlng);\n    });\n\n    if (map.markers.length === 1) {\n      map.setCenter(bounds.getCenter());\n      map.setZoom(16);\n    } else {\n      map.fitBounds(bounds);\n    }\n  }\n})(jQuery);\n","// index.js\n\nimport 'bootstrap/js/dist/collapse';\nimport 'bootstrap/js/dist/dropdown';\nimport 'bootstrap/js/dist/util';\nimport './../scss/style.scss';\n\nimport './google-maps';\n\n(function ($) {\n  /**\n   * Sl: Selector\n   * El: Element\n   */\n  const headerEl = $('.layout__header');\n  const navTogglerSl = '.navbar-toggler';\n  const navSl = '#nav-menu--main';\n\n  $(document).ready(function () {\n    loadFonts();\n    uiNav();\n    frontPageSlide();\n  });\n\n  /**\n   * Functions\n   */\n  function loadFonts () {\n    // https://github.com/typekit/webfontloader\n    const fonts = ['Open Sans'];\n    WebFont.load({\n      google: {\n        families: [`${fonts[0]}:300,700`]\n      }\n    });\n    const originFontF = $('body').css('font-family');\n    $('body').css({\n      'font-family': `${fonts[0]},${originFontF}`,\n    });\n  }\n\n  function uiNav () {\n    $(`[data-target=\"${navSl}\"]`).on('click', function (e) {\n      $('html').toggleClass('show-nav');\n      $(this).find('.hamburger').toggleClass('is-active');\n    });\n\n    $('html').on('mouseup touchmove', function (e) {\n      if ($('html').hasClass('show-nav')) {\n        const target = $(navSl).is(e.target);\n        const contain = headerEl.has(e.target).length;\n        if (!target && !contain) {\n          headerEl.find(navTogglerSl).click();\n        }\n      }\n    });\n  }\n\n  function frontPageSlide () {}\n})(jQuery);\n"],"names":["$","jQuery","each","map","$el","$markers","find","styles","args","zoom","scrollwheel","disableDefaultUI","center","google","maps","LatLng","mapTypeId","MapTypeId","ROADMAP","Map","markers","$marker","markerConfig","position","attr","icon","marker","Marker","push","html","infowindow","InfoWindow","content","event","addListener","open","addMapMarker","this","bounds","LatLngBounds","i","latlng","lat","lng","extend","length","setCenter","getCenter","setZoom","fitBounds","setMapCenter","newMap","headerEl","navTogglerSl","navSl","document","ready","fonts","WebFont","load","families","originFontF","css","loadFonts","on","e","toggleClass","hasClass","target","is","contain","has","click"],"mappings":"yBAEA,IAAWA,KA4ERC,QAxEG,aAAaC,KAAK,WAClBC,IAIJ,SAAiBC,GACf,MAAMC,EAAWD,EAAIE,KAAK,WAIpBC,EAAS,GACTC,EAAO,CACXC,KAAM,GACNC,aAAa,EACbC,kBAAkB,EAClBC,OAAQ,IAAIC,OAAOC,KAAKC,OAAO,EAAG,GAClCC,UAAWH,OAAOC,KAAKG,UAAUC,QACjCX,OAAQA,GAEJJ,EAAM,IAAIU,OAAOC,KAAKK,IAAIf,EAAI,GAAII,GAQxC,OANAL,EAAIiB,QAAU,GACdf,EAASH,KAAK,YAQhB,SAAuBmB,EAASlB,GAC9B,MAIMmB,EAAe,CACnBC,SALa,IAAIV,OAAOC,KAAKC,OAC7BM,EAAQG,KAAK,YACbH,EAAQG,KAAK,aAIbrB,IAAKA,GAEHkB,EAAQG,KAAK,eACfF,EAAaG,KAAOJ,EAAQG,KAAK,cAEnC,MAAME,EAAS,IAAIb,OAAOC,KAAKa,OAAOL,GAGtC,GADAnB,EAAIiB,QAAQQ,KAAKF,GACbL,EAAQQ,OAAQ,CAClB,MAAMC,EAAa,IAAIjB,OAAOC,KAAKiB,WAAW,CAC5CC,QAASX,EAAQQ,SAEnBhB,OAAOC,KAAKmB,MAAMC,YAAYR,EAAQ,QAAS,WAC7CI,EAAWK,KAAKhC,EAAKuB,EAC7B,EACK,CACF,CA9BGU,CAAapC,EAAEqC,MAAOlC,EAC5B,GA+BE,SAAuBA,GACrB,MAAMmC,EAAS,IAAIzB,OAAOC,KAAKyB,aAC/BvC,EAAEE,KAAKC,EAAIiB,QAAS,SAAUoB,EAAGd,GAC/B,MAAMe,EAAS,IAAI5B,OAAOC,KAAKC,OAC7BW,EAAOH,SAASmB,MAChBhB,EAAOH,SAASoB,OAElBL,EAAOM,OAAOH,EACpB,GAE+B,IAAvBtC,EAAIiB,QAAQyB,QACd1C,EAAI2C,UAAUR,EAAOS,aACrB5C,EAAI6C,QAAQ,KAEZ7C,EAAI8C,UAAUX,EAEjB,CA7CCY,CAAa/C,GACNA,CACR,CA3BSgD,CAAOnD,EAAEqC,MACrB,GCCA,SAAWrC,GAKT,MAAMoD,EAAWpD,EAAE,mBACbqD,EAAe,kBACfC,EAAQ,kBAEdtD,EAAEuD,UAAUC,MAAM,YASlB,WAEE,MAAMC,EAAQ,CAAC,aACfC,QAAQC,KAAK,CACX9C,OAAQ,CACN+C,SAAU,CAAC,GAAGH,EAAM,iBAGxB,MAAMI,EAAc7D,EAAE,QAAQ8D,IAAI,eAClC9D,EAAE,QAAQ8D,IAAI,CACZ,cAAe,GAAGL,EAAM,MAAMI,KAEjC,CApBCE,GAuBA/D,EAAE,iBAAiBsD,OAAWU,GAAG,QAAS,SAAUC,GAClDjE,EAAE,QAAQkE,YAAY,YACtBlE,EAAEqC,MAAM/B,KAAK,cAAc4D,YAAY,YAC7C,GAEIlE,EAAE,QAAQgE,GAAG,oBAAqB,SAAUC,GAC1C,GAAIjE,EAAE,QAAQmE,SAAS,YAAa,CAClC,MAAMC,EAASpE,EAAEsD,GAAOe,GAAGJ,EAAEG,QACvBE,EAAUlB,EAASmB,IAAIN,EAAEG,QAAQvB,OAClCuB,GAAWE,GACdlB,EAAS9C,KAAK+C,GAAcmB,OAE/B,CACP,EAjCA,EAqCC,CAlDD,CAkDGvE"}